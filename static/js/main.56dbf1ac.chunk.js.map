{"version":3,"sources":["screen.js","Lib.js","game/Landing.js","App.js","serviceWorker.js","index.js"],"names":["ww","Dimensions","get","width","hh","height","scr","vp","vps","s","Math","floor","landscape","msg","a","Toastify","backgroundColor","gravity","position","text","showToast","ms","Promise","resolve","reject","setTimeout","key","val","window","localStorage","getItem","setItem","clear","delay","openUrl","url","open","focus","openUrlHere","getStorageValue","setStorageValue","clearStorageValue","remainingText","seconds","secs","numDays","numHours","numMinute","ret","screen","textStyle1","textAlign","color","textTransform","Landing","props","state","args","title","desc","btnTitle","imgUrl","imgSz","buttonStyle","borderColor","borderWidth","View","style","flex","padding","alignItems","justifyContent","Text","fontSize","fontWeight","Image","source","uri","type","titleStyle","onPress","Lib","this","renderProject","flexDirection","renderXYZ","renderCMF","vp2","paddingHorizontal","maxWidth","disabled","React","Component","log","setLevel","theme","colors","primary","App","show","w","h","require","minWidth","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.56dbf1ac.chunk.js","sourcesContent":["import { View, Dimensions, ActivityIndicator, Text } from 'react-native';\n\nlet ww = Dimensions.get('window').width;\nlet hh = Dimensions.get('window').height;\n\nlet scr = ww;\nlet landscape = ww > hh;\nif (ww > hh) scr = hh;\n\nconst vp = scr / 100;\nconst vps = (s) => {\n  if (s >= 100) return scr;\n  return Math.floor(vp * s);\n}\n\nexport default {\n  vp,\n  vps,\n  landscape\n};\n\n","import Toastify from 'toastify-js';\nimport 'toastify-js/src/toastify.css';\n\nasync function showToast(msg) {\n  Toastify({\n    backgroundColor: 'black',\n    gravity: 'bottom', // `top` or `bottom`\n    position: 'center', // `left`, `center` or `right`\n    text: msg\n  }).showToast();\n}\n\nasync function delay(ms) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  })\n}\n\n// async function getLogger() {\n//   return console;\n// }\n\nasync function getStorageValue(key) {\n  const val = window.localStorage.getItem(key);\n  return val;\n}\n\nasync function setStorageValue(key, val) {\n  window.localStorage.setItem(key, val);\n}\n\nasync function clearStorageValue() {\n  window.localStorage.clear();\n}\n\nfunction openUrlHere(url) {\n  const win = window.open(url, '_self');\n  win.focus();\n}\n\nfunction openUrl(url) {\n  const win = window.open(url, '_blank');\n  win.focus();\n}\n\nfunction remainingText(seconds) {\n  let secs = seconds;\n  let numDays = Math.floor(secs / (3600 * 24));\n  secs = secs - (numDays * 3600 * 24);\n  let numHours = Math.floor(secs / 3600);\n  secs = secs - (numHours * 3600);\n  let numMinute = Math.floor(secs / 60);\n  secs = secs - (numMinute * 60);\n  let numSeconds = secs;\n  let ret = '';\n  if (numDays > 0) ret += (numDays + 'd ');\n  if (numHours > 0) ret += (numHours + 'h ');\n  if (numMinute > 0) ret += (numMinute + 'm ');\n  if (numSeconds > 0) ret += (numSeconds + 's');\n  return ret;\n}\n\nexport default {\n  delay,\n  openUrl,\n  openUrlHere,\n  showToast,\n  getStorageValue,\n  setStorageValue,\n  clearStorageValue,\n  remainingText\n};\n\n","import React from 'react';\nimport { View, Dimensions, Text, Image } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport screen from '../screen';\nimport Lib from '../Lib';\nimport _ from 'lodash';\n\nconst vp = screen.vp;\nconst vps = screen.vps;\nconst textColor1 = 'white';\nconst textStyle1 = { textAlign: 'center', color: textColor1, textTransform: 'uppercase' };\n\nclass Landing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  async componentDidMount() {\n\n  }\n\n  componentWillUnmount() {\n  }\n\n  renderProject(args) {\n    const { title, desc, btnTitle, url, imgUrl } = args;\n\n    const imgSz = vps(20);\n    const s1 = { textAlign: 'center', color: 'white' };\n    const st = { textAlign: 'center', fontSize: 24, color: 'white', fontWeight: 'bold' };\n    const bw = vps(30) < 300 ? vps(30) : 300;\n    const buttonStyle = { borderColor: 'white', borderWidth: 1, width: bw };\n    const titleStyle = { color: 'white' };\n\n    return (\n      <View style={{ flex: 1, padding: vps(2) }}>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-end' }}>\n          <Text> </Text>\n          <Text style={st}>{title}</Text>\n          <Image\n            style={{ width: imgSz, height: imgSz }}\n            source={{ uri: imgUrl }}\n          />\n          <Text> </Text>\n        </View>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'space-between' }}>\n          <Text style={s1}>{desc}</Text>\n          <View>\n            <Text> </Text>\n            <Button type='outline' buttonStyle={buttonStyle} titleStyle={titleStyle}\n              title={btnTitle} onPress={() => Lib.openUrlHere(url)} />\n            <Text> </Text>\n            <Text> </Text>\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  renderXYZ() {\n    const args = {\n      title: '$XYZ',\n      desc: '$XYZ is low volatile treasury token inspired by Olympus & Safemoon.',\n      btnTitle: 'Launch App',\n      url: 'https://dragoncultxyz.github.io',\n      imgUrl: '/logo192.png'\n    }\n\n    return this.renderProject(args);\n  }\n\n  renderCMF() {\n    const args = {\n      title: '$CMF',\n      desc: 'Conflux Moon Farmer $CMF is meme token with price guard and farming utility.',\n      btnTitle: 'Launch App',\n      url: 'https://confluxmoonfarmer.github.io',\n      imgUrl: '/logo192cmf.png'\n    }\n\n    return this.renderProject(args);\n  }\n\n  render() {\n    let ww = Dimensions.get('window').width;\n    let hh = Dimensions.get('window').height;\n    const st = { textAlign: 'center', fontSize: 24, color: 'dimgray', fontWeight: 'bold' };\n    const sd = { textAlign: 'center' };\n    const desc = 'Dragon Cult is building experimental projects in #Conflux eSpace.';\n    return (\n      <View style={{ height: hh }}>\n        <View style={{ width: ww, padding: vps(5), backgroundColor: 'white', alignItems: 'center', justifyContent: 'center' }}>\n          <Text style={st}>ABOUT</Text>\n          <Text style={sd}>{desc}</Text>\n        </View>\n        <View style={{ flex: 1, flexDirection: 'row' }}>\n          <View style={{ flex: 1, backgroundColor: 'black' }}>\n            {this.renderXYZ()}\n          </View>\n          <View style={{ flex: 1, backgroundColor: 'darkblue' }}>\n            {this.renderCMF()}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  renderOld() {\n    const imgUrl = '/logo192.png';\n    const desc0 = 'Inspired by Olympus & Safemoon. Dragon Cult is building XYZ, a wrapped treasury token soft pegged to stable coin with growth mechanism to counter inflation.';\n    const desc = 'Dragon Cult is building XYZ, a wrapped treasury token inspired by Olympus & Safemoon';\n    const buttonStyle = { borderColor: 'white', borderWidth: 1 };\n    const titleStyle = { color: 'white' };\n    const vp2 = 10 * vp;\n    const imgSz = 20 * vp;\n    const urlTrade = 'https://app.swappi.io/#/swap?inputCurrency=CFX&outputCurrency=0x2eB3a860Ddd8BC2B2621aA99168D414C14802c9f';\n    const urlAnalyze = 'https://dexscreener.com/conflux/0x87a340a3abb0c20ea047ff4c1a55b3356f850788';\n\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: 'black', paddingHorizontal: (5 * vp) }}>\n        <Text style={textStyle1}>Dragon Cult is building experimental projects in #Conflux eSpace.</Text>\n        <Text> </Text>\n        <Text> </Text>\n        <Image\n          style={{ width: imgSz, height: imgSz }}\n          source={{ uri: imgUrl }}\n        />\n        <Text> </Text>\n        <Text style={{ fontSize: 32, textAlign: 'center', color: textColor1, textTransform: 'uppercase', fontWeight: 'bold' }}>TREASURY TOKEN $XYZ</Text>\n        <Text> </Text>\n        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <View style={{ paddingHorizontal: vp2, maxWidth: 100 * vp }}>\n            <Text style={textStyle1}>$XYZ is wrapped treasury token inspired by Olympus & Safemoon</Text>\n          </View>\n        </View>\n        <Text> </Text>\n        <Text> </Text>\n        <View>\n          <Button type='outline' disabled={false} style={{}} buttonStyle={buttonStyle} titleStyle={titleStyle}\n            title='Lite Paper' onPress={() => Lib.openUrl('https://github.com/dragoncultxyz/dragoncultxyz.github.io/blob/master/README.md')} />\n          <View style={{ height: vp }} />\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Button disabled={false} style={{ width: 150 }} buttonStyle={buttonStyle} titleStyle={titleStyle}\n                type='outline' title='Trade' onPress={() => Lib.openUrl(urlTrade)} />\n            </View>\n            <View style={{ width: vp }} />\n            <View style={{ flex: 1 }}>\n              <Button disabled={false} style={{ width: 150 }} buttonStyle={buttonStyle} titleStyle={titleStyle}\n                type='outline' title='Chart' onPress={() => Lib.openUrl(urlAnalyze)} />\n            </View>\n          </View>\n          <View style={{ height: vp }} />\n          <Button disabled={false} style={{}} buttonStyle={buttonStyle} titleStyle={titleStyle}\n            title='Launch App' onPress={() => Lib.openUrlHere('https://dragoncultxyz.github.io')} />\n          <View style={{ height: vp }} />\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Button disabled={false} style={{ width: 150 }} buttonStyle={buttonStyle} titleStyle={titleStyle}\n                type='outline' title='Telegram' onPress={() => Lib.openUrl('https://t.me/dragoncultxyz')} />\n            </View>\n            <View style={{ width: vp }} />\n            <View style={{ flex: 1 }}>\n              <Button disabled={false} style={{ width: 150 }} buttonStyle={buttonStyle} titleStyle={titleStyle}\n                type='outline' title='Twitter' onPress={() => Lib.openUrl('https://twitter.com/dragoncultxyz')} />\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Landing;\n","import React from 'react';\nimport { View, Dimensions } from 'react-native';\nimport { ThemeProvider, Button } from 'react-native-elements';\nimport Landing from './game/Landing';\n// import Home from './game/Home';\nimport {\n  MemoryRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport log from 'loglevel';\n\nlog.setLevel('error');\n\nconst theme = {\n  colors: {\n    primary: 'dimgray'\n  }\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      landscape: false,\n      w: Dimensions.get('window').width\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillMount() {\n  }\n\n  render() {\n    let ww = Dimensions.get('window').width;\n    let wh = Dimensions.get('window').height;\n    let w = ww - 20;\n    let h = wh;\n\n    return (\n      <>\n        <style type=\"text/css\">{`\n          @font-face {\n            font-family: 'FontAwesome';\n            src: url(${require('react-native-vector-icons/Fonts/FontAwesome.ttf')}) format('truetype');\n          }\n        `}</style>\n\n        <View style={{ minWidth: w, height: h }}>\n          <ThemeProvider theme={theme}>\n\n            <Router>\n              <Switch>\n                {/* <Route path=\"/app\" component={Home} /> */}\n                <Route path=\"/\" component={Landing} />\n              </Switch>\n            </Router>\n          </ThemeProvider>\n        </View>\n      </>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}